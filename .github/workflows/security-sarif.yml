name: Security SARIF Upload

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  schedule:
    # Run at 1000 UTC every Monday
    - cron: '0 10 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write

jobs:
  rust-security-scan:
    name: Rust Security Scanner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-sarif-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-sarif-

      - name: Install clippy-sarif and sarif-fmt
        run: |
          cargo install clippy-sarif --locked
          cargo install sarif-fmt --locked

      - name: Run Clippy and convert to SARIF
        run: |
          cargo clippy --workspace --all-targets --all-features --message-format=json -- \
            -D warnings \
            -W clippy::dbg_macro \
            -W clippy::todo \
            -W clippy::unimplemented \
            -W clippy::mem_forget \
            -W clippy::disallowed_methods \
            -W clippy::expect_used \
            -W clippy::panic \
            -W clippy::unwrap_used \
            -W clippy::indexing_slicing \
            | clippy-sarif | tee clippy-results.sarif | sarif-fmt
        continue-on-error: true

      - name: Upload Clippy SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: clippy-results.sarif
          category: clippy

  cargo-audit-sarif:
    name: Cargo Audit SARIF
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo registry
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-audit-sarif-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-audit-sarif-

      - name: Install cargo-audit and audit-sarif
        run: |
          cargo install cargo-audit --locked --features=fix
          cargo install cargo-audit-sarif --locked

      - name: Run cargo audit and convert to SARIF
        run: |
          cargo audit --json | cargo-audit-sarif > audit-results.sarif
        continue-on-error: true

      - name: Upload Audit SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: audit-results.sarif
          category: cargo-audit

  trivy-scan:
    name: Trivy Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH,MEDIUM'
          timeout: '15m'

      - name: Upload Trivy SARIF
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: trivy-results.sarif
          category: trivy