[package]
name = "ras-jsonrpc-bidirectional-client"
version = "0.1.0"
edition = "2024"
description = "Cross-platform WebSocket client for bidirectional JSON-RPC communication"
license = "MIT OR Apache-2.0"

[dependencies]
# Core dependencies
ras-jsonrpc-types = { path = "../ras-jsonrpc-types" }
ras-jsonrpc-bidirectional-types = { path = "../ras-jsonrpc-bidirectional-types" }
ras-auth-core = { path = "../ras-auth-core" }

# Async and serialization
serde = { workspace = true }
serde_json = { workspace = true }
futures = { workspace = true }
async-trait = { workspace = true }
tokio = { workspace = true, optional = true }
uuid = { workspace = true }
thiserror = { workspace = true }
anyhow = { workspace = true }
tracing = { workspace = true }
bon = { workspace = true }
dashmap = { workspace = true }
rand = { workspace = true }

# Native WebSocket dependencies
tokio-tungstenite = { workspace = true, optional = true }
url = { workspace = true, optional = true }
http = { workspace = true, optional = true }

# WASM WebSocket dependencies
web-sys = { workspace = true, optional = true, features = [
    "BinaryType",
    "Blob",
    "CloseEvent", 
    "ErrorEvent",
    "FileReader",
    "MessageEvent",
    "WebSocket",
    "console",
] }
wasm-bindgen = { workspace = true, optional = true }
wasm-bindgen-futures = { workspace = true, optional = true }
js-sys = { workspace = true, optional = true }

[features]
default = ["native"]
native = ["tokio", "tokio-tungstenite", "url", "http"]
wasm = ["web-sys", "wasm-bindgen", "wasm-bindgen-futures", "js-sys"]

[dev-dependencies]
tokio-test = { workspace = true }
wiremock = { workspace = true }
tracing-subscriber = { workspace = true }
chrono = { workspace = true }

[target.'cfg(target_arch = "wasm32")'.dependencies]
web-sys = { workspace = true, features = [
    "BinaryType",
    "Blob",
    "CloseEvent", 
    "ErrorEvent",
    "FileReader",
    "MessageEvent",
    "WebSocket",
    "console",
] }
wasm-bindgen = { workspace = true }
wasm-bindgen-futures = { workspace = true }
js-sys = { workspace = true }

[target.'cfg(not(target_arch = "wasm32"))'.dependencies]
tokio = { workspace = true }
tokio-tungstenite = { workspace = true }
url = { workspace = true }
http = { workspace = true }