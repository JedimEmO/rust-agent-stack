{
  "components": {
    "errors": {
      "AuthenticationRequired": {
        "code": -32001,
        "message": "Authentication required"
      },
      "InsufficientPermissions": {
        "code": -32002,
        "message": "Insufficient permissions"
      },
      "InternalError": {
        "code": -32603,
        "message": "Internal error"
      },
      "InvalidParams": {
        "code": -32602,
        "message": "Invalid params"
      },
      "InvalidRequest": {
        "code": -32600,
        "message": "Invalid Request"
      },
      "MethodNotFound": {
        "code": -32601,
        "message": "Method not found"
      },
      "ParseError": {
        "code": -32700,
        "message": "Parse error"
      },
      "TokenExpired": {
        "code": -32003,
        "message": "Token expired"
      }
    },
    "schemas": {
      "CreateDocumentRequest": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Request to create a new document (admin only)",
        "properties": {
          "content": {
            "type": "string"
          },
          "tags": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "title": {
            "type": "string"
          }
        },
        "required": [
          "title",
          "content",
          "tags"
        ],
        "title": "CreateDocumentRequest",
        "type": "object"
      },
      "CreateDocumentResponse": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Response for document creation",
        "properties": {
          "created_at": {
            "type": "string"
          },
          "document_id": {
            "type": "string"
          }
        },
        "required": [
          "document_id",
          "created_at"
        ],
        "title": "CreateDocumentResponse",
        "type": "object"
      },
      "DeleteDocumentRequest": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Request to delete a document (admin only)",
        "properties": {
          "document_id": {
            "type": "string"
          }
        },
        "required": [
          "document_id"
        ],
        "title": "DeleteDocumentRequest",
        "type": "object"
      },
      "DeleteDocumentResponse": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Response for document deletion",
        "properties": {
          "message": {
            "type": "string"
          },
          "success": {
            "type": "boolean"
          }
        },
        "required": [
          "success",
          "message"
        ],
        "title": "DeleteDocumentResponse",
        "type": "object"
      },
      "GetBetaFeaturesRequest": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Request to access beta features",
        "title": "GetBetaFeaturesRequest",
        "type": "object"
      },
      "GetBetaFeaturesResponse": {
        "$defs": {
          "BetaFeature": {
            "description": "Beta feature information",
            "properties": {
              "description": {
                "type": "string"
              },
              "enabled": {
                "type": "boolean"
              },
              "name": {
                "type": "string"
              }
            },
            "required": [
              "name",
              "description",
              "enabled"
            ],
            "type": "object"
          }
        },
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Response for beta features",
        "properties": {
          "features": {
            "items": {
              "$ref": "#/$defs/BetaFeature"
            },
            "type": "array"
          }
        },
        "required": [
          "features"
        ],
        "title": "GetBetaFeaturesResponse",
        "type": "object"
      },
      "GetSystemStatusRequest": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Request to get system status (system admin only)",
        "title": "GetSystemStatusRequest",
        "type": "object"
      },
      "GetSystemStatusResponse": {
        "$defs": {
          "SystemStatus": {
            "description": "System status information",
            "properties": {
              "active_sessions": {
                "format": "uint32",
                "minimum": 0,
                "type": "integer"
              },
              "memory_usage_mb": {
                "format": "uint64",
                "minimum": 0,
                "type": "integer"
              },
              "uptime_seconds": {
                "format": "uint64",
                "minimum": 0,
                "type": "integer"
              },
              "version": {
                "type": "string"
              }
            },
            "required": [
              "uptime_seconds",
              "memory_usage_mb",
              "active_sessions",
              "version"
            ],
            "type": "object"
          }
        },
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Response for system status",
        "properties": {
          "status": {
            "$ref": "#/$defs/SystemStatus"
          }
        },
        "required": [
          "status"
        ],
        "title": "GetSystemStatusResponse",
        "type": "object"
      },
      "GetUserInfoRequest": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Request to get current user information",
        "title": "GetUserInfoRequest",
        "type": "object"
      },
      "GetUserInfoResponse": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Response containing user information",
        "properties": {
          "metadata": {
            "type": "object"
          },
          "permissions": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "user_id": {
            "type": "string"
          }
        },
        "required": [
          "user_id",
          "permissions",
          "metadata"
        ],
        "title": "GetUserInfoResponse",
        "type": "object"
      },
      "ListDocumentsRequest": {
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Request to list documents",
        "format": "uint32",
        "minimum": 0,
        "title": "ListDocumentsRequest",
        "type": "object"
      },
      "ListDocumentsResponse": {
        "$defs": {
          "DocumentInfo": {
            "description": "Document information",
            "properties": {
              "created_at": {
                "type": "string"
              },
              "id": {
                "type": "string"
              },
              "tags": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "title": {
                "type": "string"
              }
            },
            "required": [
              "id",
              "title",
              "created_at",
              "tags"
            ],
            "type": "object"
          }
        },
        "$schema": "https://json-schema.org/draft/2020-12/schema",
        "description": "Response for listing documents",
        "properties": {
          "documents": {
            "items": {
              "$ref": "#/$defs/DocumentInfo"
            },
            "type": "array"
          },
          "total": {
            "format": "uint32",
            "minimum": 0,
            "type": "integer"
          }
        },
        "required": [
          "documents",
          "total"
        ],
        "title": "ListDocumentsResponse",
        "type": "object"
      }
    }
  },
  "info": {
    "description": "OpenRPC specification for the GoogleOAuth2Service service",
    "title": "GoogleOAuth2Service JSON-RPC API",
    "version": "1.0.0"
  },
  "methods": [
    {
      "description": "Calls the get_user_info method",
      "name": "get_user_info",
      "params": [
        {
          "description": "Request parameters of type GetUserInfoRequest",
          "name": "params",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/GetUserInfoRequest"
          }
        }
      ],
      "result": {
        "description": "Response of type GetUserInfoResponse",
        "name": "result",
        "schema": {
          "$ref": "#/components/schemas/GetUserInfoResponse"
        }
      },
      "x-authentication": {
        "required": true,
        "type": "bearer"
      }
    },
    {
      "description": "Calls the list_documents method",
      "name": "list_documents",
      "params": [
        {
          "description": "Request parameters of type ListDocumentsRequest",
          "name": "params",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/ListDocumentsRequest"
          }
        }
      ],
      "result": {
        "description": "Response of type ListDocumentsResponse",
        "name": "result",
        "schema": {
          "$ref": "#/components/schemas/ListDocumentsResponse"
        }
      },
      "x-authentication": {
        "required": true,
        "type": "bearer"
      },
      "x-permissions": [
        "user:read"
      ]
    },
    {
      "description": "Calls the create_document method",
      "name": "create_document",
      "params": [
        {
          "description": "Request parameters of type CreateDocumentRequest",
          "name": "params",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/CreateDocumentRequest"
          }
        }
      ],
      "result": {
        "description": "Response of type CreateDocumentResponse",
        "name": "result",
        "schema": {
          "$ref": "#/components/schemas/CreateDocumentResponse"
        }
      },
      "x-authentication": {
        "required": true,
        "type": "bearer"
      },
      "x-permissions": [
        "content:create"
      ]
    },
    {
      "description": "Calls the delete_document method",
      "name": "delete_document",
      "params": [
        {
          "description": "Request parameters of type DeleteDocumentRequest",
          "name": "params",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/DeleteDocumentRequest"
          }
        }
      ],
      "result": {
        "description": "Response of type DeleteDocumentResponse",
        "name": "result",
        "schema": {
          "$ref": "#/components/schemas/DeleteDocumentResponse"
        }
      },
      "x-authentication": {
        "required": true,
        "type": "bearer"
      },
      "x-permissions": [
        "admin:write"
      ]
    },
    {
      "description": "Calls the get_system_status method",
      "name": "get_system_status",
      "params": [
        {
          "description": "Request parameters of type GetSystemStatusRequest",
          "name": "params",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/GetSystemStatusRequest"
          }
        }
      ],
      "result": {
        "description": "Response of type GetSystemStatusResponse",
        "name": "result",
        "schema": {
          "$ref": "#/components/schemas/GetSystemStatusResponse"
        }
      },
      "x-authentication": {
        "required": true,
        "type": "bearer"
      },
      "x-permissions": [
        "system:admin"
      ]
    },
    {
      "description": "Calls the get_beta_features method",
      "name": "get_beta_features",
      "params": [
        {
          "description": "Request parameters of type GetBetaFeaturesRequest",
          "name": "params",
          "required": true,
          "schema": {
            "$ref": "#/components/schemas/GetBetaFeaturesRequest"
          }
        }
      ],
      "result": {
        "description": "Response of type GetBetaFeaturesResponse",
        "name": "result",
        "schema": {
          "$ref": "#/components/schemas/GetBetaFeaturesResponse"
        }
      },
      "x-authentication": {
        "required": true,
        "type": "bearer"
      },
      "x-permissions": [
        "beta:access"
      ]
    }
  ],
  "openrpc": "1.3.2"
}